name: ADF_CICD
on:
  push: # Trigger the workflow when there is a push event in the "adf_publish" branch
    branches:
      - adf_publish
  workflow_dispatch: # Allow manual triggering of the workflow using the GitHub Actions UI

# Define the environment variables that will be used in the workflow
env:
  ARMTemplate: "./devcicdtesta/ARMTemplateForFactory.json"
  ARMParameter: "./devcicdtesta/ARMTemplateParametersForFactory.json"

# Define the jobs that will run as part of the workflow
jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [QA, Prod]
    name: 'Deploying ADF to ${{ matrix.environment }} Environment'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Az PowerShell module
        run: if('${{ inputs.skipAzModuleInstallation }}' -ne 'true') { Install-Module -Name Az -Scope CurrentUser -Repository PSGallery -Force }
        shell: pwsh
      - name: Azure Login
        uses: Azure/login@v1.4.3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Run Pre-deployment script
        shell: pwsh
        env:
          SP_ID: ${{ secrets.CLIENT_ID }}
          SP_SECRET: ${{ secrets.CLIENT_SECRET }}
          SP_TENANT: ${{ secrets.TENANT_ID }}
          subscriptionID: ${{ vars.subscription_ID }}
        run: |
          $securePassword = ConvertTo-SecureString -String $env:SP_SECRET -AsPlainText -Force
          $psCredential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList ($env:SP_ID, $securePassword)
          Connect-AzAccount -ServicePrincipal -Credential $psCredential -TenantId $env:SP_TENANT -subscriptionID $env:subscriptionID
          ./PrePostDeploymentScript.ps1 `
                -armTemplate "devcicdtesta/ARMTemplateForFactory.json" `
                -ResourceGroupName "${{ vars.Azure_RG }}" `
                -DataFactoryName "${{ vars.factory_name }}" `
                -ArmTemplateParameters "devcicdtesta/ARMTemplateParametersForFactory.json" `
                -predeployment $true `
                -deleteDeployment $false
      - name: Deploy Azure Resource Manager (ARM) Template
        uses: Azure/arm-deploy@v1.0.6
        with:
          scope: 'resourcegroup'
          resourceGroupName: ${{ vars.Azure_RG }}
          template: ${{ env.ARMTemplate }}
          parameters: ${{ env.ARMParameter }}
            AzureBlobStorage1_connectionString= ${{ vars.AzureBlobStorage1_connectionString }}
            factoryName= ${{ vars.factory_name }}
          deploymentMode: Incremental
      - name: Run Post-deployment script
        shell: pwsh
        run: |
          ./PrePostDeploymentScript.ps1 `
             	-armTemplate "devcicdtesta/ARMTemplateForFactory.json" `
                -ResourceGroupName "${{vars.Azure_RG}}" `
                -DataFactoryName "${{vars.factory_name}}" `
                -ArmTemplateParameters "devcicdtesta/ARMTemplateParametersForFactory.json" `
                -predeployment $false `
                -deleteDeployment $true
    needs: loop
